git remote -v // This command will show the GitHub repository your local folder is connected to:
git branch  //Use this command to see the current branch(main or master)
             //If you see * main, you're on the main branch. If it shows nothing, you may not have committed yet.
            git push
git status (This tells you:
Which files are changed
If you're on a branch
If you‚Äôre ahead/behind the GitHub repo)


case 1: when you have added detail in github and want to reflect in your computer folder then do pull and follow below steps 

git fetch origin ((this will fetch the changes made in remote and below will help to commit those in local repo and will help you to shoew the message king of write and display command))
git pull origin main(here origin is your remote and main is your local)
git staus


case 2: when you have changed in ur local repository and want to reflect in remote repository do this push


Always use below when you want to commit.
git add .
git commit -m "I am adding the text content of my file back again"
git push origin main
git status

If you want to **check whether your local repository is ahead or behind** the remote (e.g., GitHub), Git makes this easy.

---

## ‚úÖ To Check Who Is Ahead or Behind:

### Run:

```bash
git status
```

If your local repo is ahead, you'll see:

```
Your branch is ahead of 'origin/main' by X commits.
  (use "git push" to publish your local commits)
```

If you're **behind**, you'll see:

```
Your branch is behind 'origin/main' by X commits.
  (use "git pull" to update your local branch)
```

If you're **diverged** (both local and remote changed differently), you'll see:

```
Your branch and 'origin/main' have diverged,
and have X and Y different commits each, respectively.
```

---

## üîç More Detailed View

### See commits ahead/behind with:

```bash
git log origin/main..HEAD --oneline   # shows commits ahead of origin
git log HEAD..origin/main --oneline   # shows commits behind origin
```

### Show both in one line:

```bash
git fetch origin
git status
```

---

## üìå Summary

| Situation  | Meaning                               | What to do      |
| ---------- | ------------------------------------- | --------------- |
| Ahead      | You have local commits not yet pushed | `git push`      |
| Behind     | Remote has new commits                | `git pull`      |
| Diverged   | Both have changed differently         | Manual merge    |
| Up to date | Both are the same                     | Nothing to do ‚úÖ |

---

Let me know if you want help **resolving divergence or conflicts**.
